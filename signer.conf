hsmLibraries = [{
        type = GEMALTO_HSM
        jars = ["/usr/safenet/lunaclient/jsp/lib/LunaProvider.jar"]
        sharedLibDir = "/usr/safenet/lunaclient/jsp/lib/"
    }]

signingKeys = {
	"identity-manager-signing-key" = {
		alias = "cordaidentitymanagerca"
		type = GEMALTO_HSM
			credentials = {
				keyStore="tokenlabel:hsm1par1"
				password="12345678"
			}
	},
	"network-map-signing-key" = {
		alias = "cordanetworkmap"
		type = GEMALTO_HSM
			credentials = {
				keyStore="tokenlabel:hsm1par1"
				password="12345678"
			}
	}
}

signers = {
	"NetMap" = {
		signingKeyAlias = "network-map-signing-key"
		type = NETWORK_MAP
   	    schedule = {
            interval = 1m
        }
        serviceLocation = [
            {
                host = "localhost"
			    port = 5050
			    reconnect = true
			    ssl = {
				    keyStore = {
					    location = "./certificates/corda-ssl-signer-keys.jks"
					    password = "password"
				    }
				    trustStore = {
					    location = "./certificates/corda-ssl-trust-store.jks"
					    password = "trustpass"
				    }
				    validate = true
			    }
			    verbose = false
            }
		]
	}
	"CSR" = {
		crlDistributionPoint = "http://localhost:10000/certificate-revocation-list/doorman"
		signingKeyAlias = "identity-manager-signing-key"
		validDays = 365
		type = CSR
 	    schedule = {
            interval = 1m
        }
        serviceLocation = [
            {
                host = "localhost"
			    port = 5051
			    reconnect = true
			    ssl = {
				    keyStore = {
					    location = "./certificates/corda-ssl-signer-keys.jks"
					    password = "password"
				    }
				    trustStore = {
					    location = "./certificates/corda-ssl-trust-store.jks"
					    password = "trustpass"
				    }
				    validate = true
			    }
			    verbose = false
            }
		]
	}
	"Params" = {
		signingKeyAlias = "network-map-signing-key"
		type = NETWORK_PARAMETERS
 	    schedule {
            interval = 1m
        }
        serviceLocation = [
            {			
                host = "localhost"
			    port = 5050
			    reconnect = true
			    ssl = {
				    keyStore = {
					    location = "./certificates/corda-ssl-signer-keys.jks"
					    password = "password"
				    }
                    trustStore = {
                        location = "./certificates/corda-ssl-trust-store.jks"
                        password = "trustpass"
                    }
				    validate = true
			    }
			    verbose = false
            }
		]
    }
	"CRL" = {
		crlDistributionPoint = "http://localhost:10000/certificate-revocation-list/doorman"
		signingKeyAlias = "identity-manager-signing-key"
		updatePeriod = 9000
		type = CRL
  	    schedule {
            interval = 1d
        }
    	serviceLocation = [
            {			
                host = "localhost"
			    port = 5052
			    reconnect = true
			    ssl = {
                    keyStore = {
                        location = "./certificates/corda-ssl-signer-keys.jks"
                        password = "password"
                    }
                    trustStore = {
                        location = "./certificates/corda-ssl-trust-store.jks"
                        password = "trustpass"
                    }
				    validate = true
			    }
			    verbose = false
            }
		]
	}
}

# shell = {
#     sshdPort = 2223
#     user = "testuser"
#     password = "password"
# }

globalCertificateStore = {
    file = "./certificates/network-root-truststore.jks"
    password = trustpass
}

authServiceConfig = {
    disableAuthentication=false
    host=127.0.0.1
    port=8081
    trustStore = {
        location = ./certificates/corda-ssl-trust-store.jks
        password = trustpass
    }
    issuer="http://test"
    leeway=5s
}

adminListener = {
    port = 5054
    ssl = {
        keyStore = {
            location = ./certificates/corda-ssl-identity-manager-keys.jks
            password = password
        }
        trustStore = {
            location = ./certificates/corda-ssl-trust-store.jks
            password = trustpass
        }
    }
}

